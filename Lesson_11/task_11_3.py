# 3. Создайте собственный класс-исключение, используемый для проверки содержимого списка на наличие только чисел.
# Техническое задание:
#
# Собственный Класс-исключение используется только для «подмены» исключения.
# Вы можете создать в нем конструктор, если хотите наполнить его данными.
# Данные запрашиваются у пользователя по одному элементу.
# Длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
# введя, например, команду «stop» или пустую строку.
# Список заполняется только числами. Для простоты ввода - целыми.
# При вводе не числа выбрасывается исключение. Оно корректно обрабатывается и ошибочные данные в список не заносятся.
# Отобразить диагностическое сообщение о неправильном вводе.

class IsDigitInList(Exception):
    def __str__(self):
        return 'Ошибка ввода!'


def check_is_digit(my_str):
    if my_str.isdigit():
        return True
    else:
        raise IsDigitInList()


my_list = []
while True:
    my_num = input('Введите число или stop: ')
    if my_num == 'stop':
        break
    try:
        check_is_digit(my_num)
    except IsDigitInList as err:
        print(err)
    else:
        my_list.append(my_num)

    # Или лаконичнее так записать, хотя и но по pep8? ))
    # try: check_is_digit(my_num)
    # except IsDigitInList as err: print(err)
    # else: my_list.append(my_num)
    #
    # Либо можно без else, а my_list.append(my_num) поставить после check_is_digit(my_num)? Как правильнее?
