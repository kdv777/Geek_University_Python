# 4. [Задача с двумя звездочками]: усложненный вариант задания 3. Написать декоратор с аргументом-функцией (callback),
# позволяющий валидировать входные значения функции и выбрасывать исключение ValueError, если что-то не так
# Техническое задание:
#
# Посмотрите как реализуется декоратор с параметром в методичке - еще один уровень вложенности
# Не используйте поиск решения в интернете вообще (от слова совсем) - попытайтесь разобраться по методичке что происходит.
# Переданная функция вычисляется от параметров, если True, то возвращаем результат, если False - выкидываем исключение.
# Сможете ли вы замаскировать работу декоратора? Это тоже рассмаотрено в методичке.

# def old_func(x):
#     return x**3


def arg_check(flag):
    def wrapper(func):
        def _wrapper(x):
            if flag(x):
                result = func(x)
            else:
                msg = f'Некорректный аргумент {x}'
                raise ValueError(msg)
            print('Вывод результата функции old_func:')
            return result
        return _wrapper
    return wrapper


@arg_check(lambda x: x > 0)
def old_func(x):
    return x**x


print(old_func(-4))
